# python extension setup script for urjtag

from distutils.core import setup, Extension

import sys
import os

# declare as lists
include_dirs = []
library_dirs = []
libraries = []
extra_link_args = []

include_dirs.append('@top_srcdir@')
include_dirs.append('@top_srcdir@/include')
include_dirs.append('@top_builddir@')
library_dirs.append('@top_builddir@/src/.libs')
libraries.append('urjtag')

if os.name == 'nt': # Windows
    from pathlib import Path
    python_exe_path = Path(sys.executable)
    python_bin_dir = python_exe_path.parent / 'Library' / 'bin'
    if not python_bin_dir.exists:
        print("Error finding python bin path")
        sys.exit(1)
    library_dirs.append(str(python_bin_dir))
    ftdi_dir = Path('c:/ftdi/amd64')
    if not ftdi_dir.exists:
        print("Error finding FTDI driver path")
        sys.exit(1)
    library_dirs.append(str(ftdi_di))
elif os.environ.get('CC') != 'gcc': # cross-compiling
    include_dirs.append('/usr/local/include/python3.5m') # Python.h
    include_dirs.append('/usr/@host_alias@/include/python3.5m') # pyconfig.h
    library_dirs.append('/usr/@host_alias@/lib')
    libraries.append('python3.5m')
    extra_link_args.append('-shared')

libraries.extend( w.replace('-l', '') for w in "@LIBFTDI_LIBS@ @FTD2XXLIB@ @LIBUSB_LIBS@ @LIBINTL@".split() if w.replace('-l', '') not in libraries )

# https://docs.python.org/3/distutils/apiref.html#distutils.core.setup
setup(name="urjtag",
      version="@VERSION@",
      description="urJtag Python Bindings",
      ext_modules=[
        Extension("urjtag", ["@srcdir@/chain.c", "@srcdir@/register.c"],
                  define_macros=[('HAVE_CONFIG_H', None)],
                  include_dirs=include_dirs,
                  library_dirs=library_dirs,
                  libraries=libraries,
                  extra_link_args=extra_link_args)
         ])
